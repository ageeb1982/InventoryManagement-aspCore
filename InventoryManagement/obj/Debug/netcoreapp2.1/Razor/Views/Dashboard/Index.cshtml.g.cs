#pragma checksum "/home/ageeb/Downloads/asp code/InventoryManagement-master/InventoryManagement/Views/Dashboard/Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "3b765d9563da8236c17284282f7563f44483f994"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Dashboard_Index), @"mvc.1.0.view", @"/Views/Dashboard/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Dashboard/Index.cshtml", typeof(AspNetCore.Views_Dashboard_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "/home/ageeb/Downloads/asp code/InventoryManagement-master/InventoryManagement/Views/_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#line 2 "/home/ageeb/Downloads/asp code/InventoryManagement-master/InventoryManagement/Views/_ViewImports.cshtml"
using coderush;

#line default
#line hidden
#line 3 "/home/ageeb/Downloads/asp code/InventoryManagement-master/InventoryManagement/Views/_ViewImports.cshtml"
using coderush.Models;

#line default
#line hidden
#line 4 "/home/ageeb/Downloads/asp code/InventoryManagement-master/InventoryManagement/Views/_ViewImports.cshtml"
using coderush.Models.AccountViewModels;

#line default
#line hidden
#line 5 "/home/ageeb/Downloads/asp code/InventoryManagement-master/InventoryManagement/Views/_ViewImports.cshtml"
using coderush.Models.ManageViewModels;

#line default
#line hidden
#line 6 "/home/ageeb/Downloads/asp code/InventoryManagement-master/InventoryManagement/Views/_ViewImports.cshtml"
using coderush.Pages;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3b765d9563da8236c17284282f7563f44483f994", @"/Views/Dashboard/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f9ac69d2a6197d05847cf2439b90d37e9c3db3e0", @"/Views/_ViewImports.cshtml")]
    public class Views_Dashboard_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 1, true);
            WriteLiteral("\n");
            EndContext();
#line 2 "/home/ageeb/Downloads/asp code/InventoryManagement-master/InventoryManagement/Views/Dashboard/Index.cshtml"
  
    ViewData["Title"] = "Dashboard Main";

#line default
#line hidden
            BeginContext(48, 3364, true);
            WriteLiteral(@"<!-- Content Wrapper. Contains page content -->
<div class=""content-wrapper"">

    <!-- Main content -->
    <section class=""content"">
        <div class=""row"">
            <div class=""col-lg-6"">
                <div class=""box"">
                    <div class=""box-header with-border"">
                        <h3 class=""box-title text-primary""><i class=""fa fa-pie-chart""></i> Products</h3>
                        <div class=""box-tools pull-right"">
                            <button type=""button"" class=""btn btn-box-tool"" data-widget=""collapse"" data-toggle=""tooltip""
                                    title=""Collapse"">
                                <i class=""fa fa-minus""></i>
                            </button>
                            <button type=""button"" class=""btn btn-box-tool"" data-widget=""remove"" data-toggle=""tooltip"" title=""Remove"">
                                <i class=""fa fa-times""></i>
                            </button>
                        </div>
                    </div>
           ");
            WriteLiteral(@"         <div class=""box-body"">
                        <div id=""chartProducts""></div>
                    </div>
                </div>
            </div>
            <div class=""col-lg-6"">
                <div class=""box"">
                    <div class=""box-header with-border"">
                        <h3 class=""box-title text-primary""><i class=""fa fa-pie-chart""></i> Customers</h3>
                        <div class=""box-tools pull-right"">
                            <button type=""button"" class=""btn btn-box-tool"" data-widget=""collapse"" data-toggle=""tooltip""
                                    title=""Collapse"">
                                <i class=""fa fa-minus""></i>
                            </button>
                            <button type=""button"" class=""btn btn-box-tool"" data-widget=""remove"" data-toggle=""tooltip"" title=""Remove"">
                                <i class=""fa fa-times""></i>
                            </button>
                        </div>
                    </div>
               ");
            WriteLiteral(@"     <div class=""box-body"">
                        <div id=""chartCustomers""></div>
                    </div>
                </div>
            </div>
        </div>
        <div class=""row"">
            <div class=""col-lg-12"">
                <div class=""box"">
                    <div class=""box-header with-border"">
                        <h3 class=""box-title text-primary""><i class=""fa fa-pie-chart""></i> Sales vs Purchase</h3>
                        <div class=""box-tools pull-right"">
                            <button type=""button"" class=""btn btn-box-tool"" data-widget=""collapse"" data-toggle=""tooltip""
                                    title=""Collapse"">
                                <i class=""fa fa-minus""></i>
                            </button>
                            <button type=""button"" class=""btn btn-box-tool"" data-widget=""remove"" data-toggle=""tooltip"" title=""Remove"">
                                <i class=""fa fa-times""></i>
                            </button>
                        </");
            WriteLiteral(@"div>
                    </div>
                    <div class=""box-body"">
                        <div id=""chartSalesPurchase""></div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->

");
            EndContext();
            DefineSection("Styles", async() => {
                BeginContext(3428, 2, true);
                WriteLiteral("\n\n");
                EndContext();
            }
            );
            BeginContext(3432, 1, true);
            WriteLiteral("\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(3450, 8164, true);
                WriteLiteral(@"

    <script type=""text/javascript"">
        $(function () {
            
            $(""#chartProducts"").ejChart(
                {
                    //Initializing Common Properties for all the series         
                    commonSeriesOptions:
                        {
                            labelPosition: 'outside',
                            tooltip: { visible: true, format: ""#point.x# : #point.y#%"" },
                            marker:
                                {
                                    dataLabel:
                                        {
                                            shape: 'none',
                                            visible: true,
                                            textPosition: 'top',
                                            border: { width: 1 },
                                            connectorLine: { height: 30, stroke: 'black' }
                                        }
                                }
                       ");
                WriteLiteral(@" },

                    //Initializing Series
                    series:
                        [
                            {
                                points: [{ x: ""Watching TV"", text: ""Watching TV"", y: 56 },
                                { x: ""Socializing"", text: ""Socializing"", y: 26 },
                                { x: ""Reading"", text: ""Reading"", y: 3 },
                                { x: ""Sports"", text: ""Sports"", y: 7 },
                                { x: ""Others"", text: ""Others"", y: 8 }],

                                type: 'doughnut',
                                explodeIndex: 4,
                                doughnutCoefficient: 0.5,
                                doughnutSize: 0.8
                            }
                        ],

                    //Enabling 3D Chart
                    enable3D: true,
                    enableRotation: true,
                    depth: 30,
                    tilt: -30,
                    rotation: -30,
                    per");
                WriteLiteral(@"spectiveAngle: 90,
                    isResponsive: true,
                    load: ""onchartload"",
                    title: { text: ""People's Hobbies"" },
                    size: { height: ""300"", width: ""400"" },
                    legend: { visible: false }
                });

            $(""#chartCustomers"").ejChart(
                {
                    //Initializing Series
                    series:
                        [
                            {
                                points: [{ x: 'Renewed', y: 18.2, text: '18.20%' }, { x: 'Subscribe', y: 27.3, text: '27.3%' },
                                { x: 'Support', y: 55.9, text: '55.9%' }, { x: 'Downloaded', y: 76.8, text: '76.8%' },
                                { x: 'Visited', y: 100, text: '100%' }],
                                tooltip:
                                    {
                                        visible: true,
                                        template: 'Tooltip'
                                    },
 ");
                WriteLiteral(@"                               marker:
                                    {
                                        dataLabel:
                                            {
                                                visible: true,
                                                shape: 'none',
                                                enableContrastColor: true,
                                                font: { size: '12px', fontWeight: 'lighter' }
                                            }
                                    },
                                name: 'WebSite',
                                type: 'funnel',
                                labelPosition: 'inside',
                                funnelHeight: ""20%"",
                                funnelWidth: ""15%""
                            }
                        ],
                    load: ""loadTheme"",
                    isResponsive: true,
                    title: { text: 'Web Site Visitor' },
                   ");
                WriteLiteral(@" size: { height: ""300"" },
                    legend: { visible: true, position: 'top' }
                });

            $(""#chartSalesPurchase"").ejChart(
                {
                    //Initializing Primary X Axis
                    primaryXAxis:
                        {
                            title: { text: ""Month"" }
                        },

                    //Initializing Primary Y Axis	
                    primaryYAxis:
                        {
                            title: { text: ""Unit Sold"" }
                        },
                    axes:
                        [
                            {
                                majorGridLines:
                                    {
                                        visible: false
                                    },
                                orientation: 'Vertical',
                                opposedPosition: true,
                                axisLine: { visible: false },
                            ");
                WriteLiteral(@"    rangePadding: 'normal',
                                name: 'yAxis',
                                labelFormat: '${value}',
                                title: { text: ""Total Transactions"" }
                            }
                        ],

                    //Initializing Common Properties for all the series
                    commonSeriesOptions:
                        {
                            tooltip: { visible: true }
                        },

                    //Initializing Series
                    series:
                        [
                            {
                                points: [{ x: ""Jan"", y: 45 }, { x: ""Feb"", y: 100 }, { x: ""March"", y: 25 },
                                { x: ""April"", y: 100 }, { x: ""May"", y: 85 }, { x: ""June"", y: 140 }],
                                fill: ""#69D2E7"",
                                name: 'Unit Sold',
                                type: 'column',
                                enableAnimation: true,
     ");
                WriteLiteral(@"                           tooltip:
                                    {
                                        format: ""#point.x# <br/> Unit Sold : #point.y# <br/>""
                                    }
                            },
                            {
                                points: [{ x: ""Jan"", y: 1000 }, { x: ""Feb"", y: 3000 }, { x: ""March"", y: 1000 },
                                { x: ""April"", y: 7000 }, { x: ""May"", y: 5000 }, { x: ""June"", y: 7000 }],
                                name: 'Total Transaction',
                                type: 'line',
                                enableAnimation: true,
                                yAxisName: 'yAxis',
                                tooltip:
                                    {
                                        format: ""#point.x# <br/> Profit : #point.y# <br/>""
                                    },
                                marker:
                                    {
                                        s");
                WriteLiteral(@"hape: 'circle',
                                        size:
                                            {
                                                height: 8, width: 8
                                            },
                                        visible: true
                                    },
                                border: { width: 2 }
                            }
                        ],
                    load: ""loadTheme"",
                    isResponsive: true,
                    title: { text: 'Sales Report ' },
                    size: { height: ""300"" },
                    legend:
                        {
                            visible: true,
                            font: { size: '15px' },
                            shape: 'seriesType',
                            position: 'Top',
                            itemStyle: { width: 15, height: 15 }
                        }
                });

        });

        

    </script>
");
                EndContext();
            }
            );
            BeginContext(11616, 1, true);
            WriteLiteral("\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
